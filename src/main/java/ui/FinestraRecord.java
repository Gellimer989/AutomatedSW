package ui;

import it.unimol.gestori.GestoreInterfaccia;
import it.unimol.record.ListaRecord;
import it.unimol.record.Record;

import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


/**
 * classe utilizzata per far visualizzare al giocatore i record,
 * ordinati da una classe anonima ,
 * precedentemente sostenuti da altri giocatori.
 *
 * @author Francesco Chiacchiari
 */
public class FinestraRecord {
    private JButton bottoneIndietro;
    private JTextArea areaTesto;
    private JPanel pannelloRecord;
    private ListaRecord listaRecord = ListaRecord.getInstance();

    public FinestraRecord(GestoreInterfaccia gestoreInterfaccia) {
        areaTesto.setEditable(false);

        for (Record record : listaRecord.listaRecord) {
            areaTesto.append("Player: " + record.getNomeGiocatore() + " Score: " + String.valueOf(record.getPunteggioPartita()) + "\n");

        }
        bottoneIndietro.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                gestoreInterfaccia.status = 5;
                gestoreInterfaccia.sceltaInterfaccia();
            }
        });
    }


    public JPanel getPannelloRecord() {
        return pannelloRecord;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        pannelloRecord = new JPanel();
        pannelloRecord.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        pannelloRecord.setBackground(new Color(-14013137));
        areaTesto = new JTextArea();
        areaTesto.setBackground(new Color(-14013137));
        Font areaTestoFont = this.$$$getFont$$$("OCR A Extended", -1, 28, areaTesto.getFont());
        if (areaTestoFont != null) areaTesto.setFont(areaTestoFont);
        areaTesto.setForeground(new Color(-12544960));
        pannelloRecord.add(areaTesto, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("OCR A Extended", Font.BOLD, 36, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-4511988));
        label1.setText("WHO SAVED THE WORLD?");
        pannelloRecord.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bottoneIndietro = new JButton();
        bottoneIndietro.setBackground(new Color(-14013137));
        Font bottoneIndietroFont = this.$$$getFont$$$("OCR A Extended", -1, -1, bottoneIndietro.getFont());
        if (bottoneIndietroFont != null) bottoneIndietro.setFont(bottoneIndietroFont);
        bottoneIndietro.setForeground(new Color(-12544960));
        bottoneIndietro.setText("INDIETRO");
        pannelloRecord.add(bottoneIndietro, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pannelloRecord;
    }
}
